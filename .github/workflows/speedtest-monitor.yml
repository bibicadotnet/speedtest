name: Speedtest Server Monitor

on:
  schedule:
    # Chạy hàng tuần thay vì hàng ngày để tránh spam
    - cron: '0 2 * * 0'  # Chủ nhật lúc 2:00 UTC
  workflow_dispatch: # Cho phép chạy thủ công

jobs:
  check-speedtest-servers:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        # Cài đặt speedtest-cli từ pip thay vì apt (version mới hơn)
        sudo apt-get update
        sudo apt-get install -y python3-pip curl jq
        pip3 install speedtest-cli
        
        # Thêm pip bin vào PATH
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: Setup network optimization
      run: |
        # Thay đổi User-Agent và network settings
        export SPEEDTEST_CLI_USER_AGENT="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36"
        echo "SPEEDTEST_CLI_USER_AGENT=$SPEEDTEST_CLI_USER_AGENT" >> $GITHUB_ENV
        
        # Random delay để tránh detection
        sleep $((RANDOM % 30 + 10))
        
    - name: Check servers availability
      run: |
        # Đọc danh sách server từ bench.sh
        echo "📊 Đọc danh sách server từ bench.sh..."
        
        mapfile -t server_lines < <(grep "speed_test '[0-9]" bench.sh)
        
        if [ ${#server_lines[@]} -eq 0 ]; then
          echo "❌ Không tìm thấy server nào trong bench.sh"
          exit 1
        fi
        
        # Function test server availability bằng cách ping Speedtest API
        check_server_exists() {
          local server_id="$1"
          
          # Thử multiple methods để check server
          
          # Method 1: Check via Speedtest web API (ít bị block hơn)
          local api_url="https://www.speedtest.net/api/js/servers?engine=js&limit=10&search=$server_id"
          local response=$(curl -s -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36" "$api_url" 2>/dev/null || echo "")
          
          if [[ "$response" == *"$server_id"* ]]; then
            echo "✅ Server $server_id found in API"
            return 0
          fi
          
          # Method 2: Simple HTTP check to server
          local server_url="http://speedtest$server_id.net/speedtest/upload.php"
          if curl -s --connect-timeout 10 --max-time 15 -H "User-Agent: Mozilla/5.0" "$server_url" >/dev/null 2>&1; then
            echo "✅ Server $server_id HTTP reachable"
            return 0
          fi
          
          # Method 3: Alternative server URL format
          local alt_url="https://$server_id.speedtestcustom.com"
          if curl -s --connect-timeout 10 --max-time 15 -H "User-Agent: Mozilla/5.0" "$alt_url" >/dev/null 2>&1; then
            echo "✅ Server $server_id alternative URL reachable"
            return 0
          fi
          
          echo "❌ Server $server_id not reachable"
          return 1
        }
        
        # Function tìm server thay thế từ online database
        find_replacement_server_online() {
          local location="$1"
          local current_id="$2"
          
          echo "🔍 Tìm server thay thế online cho $location..."
          
          # Sử dụng public API để lấy danh sách server
          local search_term=""
          
          case "$location" in
            *"San Jose"*|*"US"*) search_term="San Jose" ;;
            *"France"*|*"FR"*) search_term="France" ;;
            *"Amsterdam"*|*"NL"*) search_term="Amsterdam" ;;
            *"Hong Kong"*|*"CN"*) search_term="Hong Kong" ;;
            *"Singapore"*|*"SG"*) search_term="Singapore" ;;
            *"Tokyo"*|*"JP"*) search_term="Tokyo" ;;
            *"FPT"*|*"VN"*) search_term="Vietnam FPT" ;;
            *"VNPT"*|*"VN"*) search_term="Vietnam VNPT" ;;
            *"Viettel"*|*"VN"*) search_term="Vietnam Viettel" ;;
            *) search_term="Vietnam" ;;
          esac
          
          # Fallback server IDs dựa trên kinh nghiệm (server thường stable)
          local fallback_servers=""
          case "$location" in
            *"San Jose"*|*"US"*) fallback_servers="5029 10390 17846" ;;
            *"France"*|*"FR"*) fallback_servers="3633 24215 31522" ;;
            *"Amsterdam"*|*"NL"*) fallback_servers="2042 13218 28922" ;;
            *"Hong Kong"*|*"CN"*) fallback_servers="13623 21569 24447" ;;
            *"Singapore"*|*"SG"*) fallback_servers="7192 13623 21569" ;;
            *"Tokyo"*|*"JP"*) fallback_servers="15047 21118 28910" ;;
            *"FPT"*|*"VN"*) fallback_servers="13747 21618 24569" ;;
            *"VNPT"*|*"VN"*) fallback_servers="18445 28922 24569" ;;
            *"Viettel"*|*"VN"*) fallback_servers="21618 24569 28922" ;;
          esac
          
          # Test fallback servers
          for server_id in $fallback_servers; do
            if [[ "$server_id" != "$current_id" ]]; then
              echo "🧪 Testing fallback server $server_id..."
              if check_server_exists "$server_id"; then
                echo "$server_id"
                return 0
              fi
              sleep 2
            fi
          done
          
          return 1
        }
        
        CHANGED=false
        FAILED_SERVERS=()
        REPLACED_SERVERS=()
        
        echo "📊 Kiểm tra ${#server_lines[@]} speedtest servers..."
        echo "=================================="
        
        # Kiểm tra từng server với random delay
        for line in "${server_lines[@]}"; do
          server_id=$(echo "$line" | sed -n "s/.*speed_test '\([0-9]*\)'.*/\1/p")
          location=$(echo "$line" | sed -n "s/.*speed_test '[0-9]*' '\([^']*\)'.*/\1/p")
          
          if [[ -z "$server_id" || -z "$location" ]]; then
            echo "⚠️ Không thể parse: $line"
            continue
          fi
          
          echo "🧪 Kiểm tra Server $server_id ($location)"
          
          # Random delay để tránh rate limiting
          sleep $((RANDOM % 5 + 3))
          
          if check_server_exists "$server_id"; then
            echo "✅ Server $server_id OK"
          else
            echo "❌ Server $server_id FAILED"
            FAILED_SERVERS+=("$server_id:$location")
            
            # Tìm server thay thế
            new_server_id=$(find_replacement_server_online "$location" "$server_id")
            
            if [[ -n "$new_server_id" && "$new_server_id" != "$server_id" ]]; then
              echo "✅ Tìm thấy server thay thế $new_server_id cho $location"
              
              # Thay thế trong bench.sh
              sed -i "s/speed_test '$server_id'/speed_test '$new_server_id'/g" bench.sh
              
              CHANGED=true
              REPLACED_SERVERS+=("$server_id -> $new_server_id ($location)")
              echo "📝 Đã cập nhật bench.sh: $server_id -> $new_server_id"
            else
              echo "⚠️ Không tìm thấy server thay thế cho $location"
            fi
          fi
          
          echo "---"
        done
        
        echo "=================================="
        echo "📊 Tổng kết:"
        echo "- Số server failed: ${#FAILED_SERVERS[@]}"
        echo "- Số server replaced: ${#REPLACED_SERVERS[@]}"
        
        if [ ${#FAILED_SERVERS[@]} -gt 0 ]; then
          echo "🔴 Server failed:"
          for failed in "${FAILED_SERVERS[@]}"; do
            echo "  * $failed"
          done
        fi
        
        if [ ${#REPLACED_SERVERS[@]} -gt 0 ]; then
          echo "🟢 Server replaced:"
          for replaced in "${REPLACED_SERVERS[@]}"; do
            echo "  * $replaced"
          done
        fi
        
        # Safety check: không thay đổi nếu quá nhiều server failed
        if [ ${#FAILED_SERVERS[@]} -gt 6 ]; then
          echo "⚠️ Quá nhiều server failed (${#FAILED_SERVERS[@]}), có thể là network issue."
          echo "Chỉ thực hiện thay đổi nếu có ít nhất 1 server thay thế thành công."
          if [ ${#REPLACED_SERVERS[@]} -eq 0 ]; then
            CHANGED=false
            echo "❌ Không có server nào được thay thế thành công, hủy commit."
          fi
        fi
        
        echo "CHANGED=$CHANGED" >> $GITHUB_ENV
        
        # Tạo summary cho GitHub Actions
        {
          echo "## 🚀 Speedtest Server Check Results"
          echo ""
          echo "- **Failed servers:** ${#FAILED_SERVERS[@]}"
          echo "- **Replaced servers:** ${#REPLACED_SERVERS[@]}"
          echo "- **Changes made:** $CHANGED"
          echo ""
          if [ ${#REPLACED_SERVERS[@]} -gt 0 ]; then
            echo "### ✅ Successful Replacements:"
            for replaced in "${REPLACED_SERVERS[@]}"; do
              echo "- $replaced"
            done
          fi
        } >> $GITHUB_STEP_SUMMARY
        
    - name: Commit và push thay đổi
      if: env.CHANGED == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        echo "📝 Thay đổi trong bench.sh:"
        git diff bench.sh
        
        if git diff --quiet bench.sh; then
          echo "⚠️ Không có thay đổi thực tế trong bench.sh"
          exit 0
        fi
        
        git add bench.sh
        git commit -m "🔄 Auto-update speedtest servers - $(date +'%Y-%m-%d %H:%M')"
        git push
        
        echo "✅ Đã commit và push thay đổi thành công!"
