name: Speedtest Server Monitor

on:
  schedule:
    # Ch·∫°y h√†ng ng√†y l√∫c 2:00 UTC (9:00 AM GMT+7)
    - cron: '0 2 * * *'
  workflow_dispatch: # Cho ph√©p ch·∫°y th·ªß c√¥ng

jobs:
  check-speedtest-servers:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Install Speedtest CLI
      run: |
        # Download v√† c√†i ƒë·∫∑t Speedtest CLI t·ª´ official source
        curl -s https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh | sudo bash
        sudo apt-get install speedtest-cli
        
        # Accept license (speedtest-cli command)
        speedtest-cli --version > /dev/null 2>&1 || true
        
    - name: Check and update server IDs
      run: |
        # T·∫°o file backup
        cp bench.sh bench.sh.backup
        
        # Danh s√°ch server c·∫ßn check (format: "ID:Location:Country")  
        declare -A SERVERS=(
          ["68864"]="San Jose:US"
          ["62493"]="Orange France:FR" 
          ["28922"]="Amsterdam:NL"
          ["13538"]="Hong Kong:CN"
          ["7311"]="Singapore:SG"
          ["50467"]="Tokyo:JP"
          ["2515"]="FPT HCM:VN"
          ["2552"]="FPT HN:VN"
          ["17758"]="VNPT HCM:VN"
          ["17757"]="VNPT HN:VN"
          ["54812"]="Viettel HCM:VN"
          ["59915"]="Viettel DN:VN"
        )
        
        # Function ƒë·ªÉ t√¨m server thay th·∫ø c√πng location v·ªõi mapping c·ª• th·ªÉ
        find_replacement_server() {
          local location="$1"
          local country="$2"
          local current_id="$3"
          
          echo "üîç T√¨m server thay th·∫ø cho $location, $country..."
          
          # Mapping c·ª• th·ªÉ cho t·ª´ng location
          local replacement_id=""
          
          case "$location" in
            "San Jose")
              # T√¨m server ·ªü California, US
              replacement_id=$(speedtest-cli --list | grep -i "california\|san jose\|san francisco\|palo alto" | grep -v "$current_id" | head -1 | awk '{print $1}' | tr -d ')')
              ;;
            "Orange France")
              # T√¨m server ·ªü France
              replacement_id=$(speedtest --servers | grep -i "france\|paris\|lyon" | grep -v "$current_id" | head -1 | awk '{print $1}')
              ;;
            "Amsterdam")
              # T√¨m server ·ªü Netherlands
              replacement_id=$(speedtest --servers | grep -i "netherlands\|amsterdam\|holland" | grep -v "$current_id" | head -1 | awk '{print $1}')
              ;;
            "Hong Kong")
              # T√¨m server ·ªü Hong Kong
              replacement_id=$(speedtest --servers | grep -i "hong kong\|hk" | grep -v "$current_id" | head -1 | awk '{print $1}')
              ;;
            "Singapore")
              # T√¨m server ·ªü Singapore
              replacement_id=$(speedtest --servers | grep -i "singapore\|sg" | grep -v "$current_id" | head -1 | awk '{print $1}')
              ;;
            "Tokyo")
              # T√¨m server ·ªü Japan
              replacement_id=$(speedtest --servers | grep -i "japan\|tokyo\|osaka" | grep -v "$current_id" | head -1 | awk '{print $1}')
              ;;
            "FPT HCM")
              # T√¨m server FPT kh√°c ·ªü HCM ho·∫∑c VN
              replacement_id=$(speedtest --servers | grep -i "fpt.*ho chi minh\|fpt.*hcm\|fpt.*vietnam" | grep -v "$current_id" | head -1 | awk '{print $1}')
              [[ -z "$replacement_id" ]] && replacement_id=$(speedtest --servers | grep -i "fpt" | grep -i "vietnam" | grep -v "$current_id" | head -1 | awk '{print $1}')
              ;;
            "FPT HN")
              # T√¨m server FPT kh√°c ·ªü HN ho·∫∑c VN  
              replacement_id=$(speedtest --servers | grep -i "fpt.*hanoi\|fpt.*ha noi\|fpt.*vietnam" | grep -v "$current_id" | head -1 | awk '{print $1}')
              [[ -z "$replacement_id" ]] && replacement_id=$(speedtest --servers | grep -i "fpt" | grep -i "vietnam" | grep -v "$current_id" | head -1 | awk '{print $1}')
              ;;
            "VNPT HCM")
              # T√¨m server VNPT kh√°c ·ªü HCM ho·∫∑c VN
              replacement_id=$(speedtest --servers | grep -i "vnpt.*ho chi minh\|vnpt.*hcm\|vnpt.*vietnam" | grep -v "$current_id" | head -1 | awk '{print $1}')
              [[ -z "$replacement_id" ]] && replacement_id=$(speedtest --servers | grep -i "vnpt" | grep -i "vietnam" | grep -v "$current_id" | head -1 | awk '{print $1}')
              ;;
            "VNPT HN")
              # T√¨m server VNPT kh√°c ·ªü HN ho·∫∑c VN
              replacement_id=$(speedtest --servers | grep -i "vnpt.*hanoi\|vnpt.*ha noi\|vnpt.*vietnam" | grep -v "$current_id" | head -1 | awk '{print $1}')
              [[ -z "$replacement_id" ]] && replacement_id=$(speedtest --servers | grep -i "vnpt" | grep -i "vietnam" | grep -v "$current_id" | head -1 | awk '{print $1}')
              ;;
            "Viettel HCM")
              # T√¨m server Viettel kh√°c ·ªü HCM ho·∫∑c VN
              replacement_id=$(speedtest --servers | grep -i "viettel.*ho chi minh\|viettel.*hcm\|viettel.*vietnam" | grep -v "$current_id" | head -1 | awk '{print $1}')
              [[ -z "$replacement_id" ]] && replacement_id=$(speedtest --servers | grep -i "viettel" | grep -i "vietnam" | grep -v "$current_id" | head -1 | awk '{print $1}')
              ;;
            "Viettel DN")
              # T√¨m server Viettel kh√°c ·ªü Da Nang ho·∫∑c VN
              replacement_id=$(speedtest --servers | grep -i "viettel.*da nang\|viettel.*danang\|viettel.*vietnam" | grep -v "$current_id" | head -1 | awk '{print $1}')
              [[ -z "$replacement_id" ]] && replacement_id=$(speedtest --servers | grep -i "viettel" | grep -i "vietnam" | grep -v "$current_id" | head -1 | awk '{print $1}')
              ;;
          esac
          
          # N·∫øu v·∫´n kh√¥ng t√¨m th·∫•y, t√¨m server b·∫•t k√¨ c√πng qu·ªëc gia
          if [[ -z "$replacement_id" ]]; then
            case "$country" in
              "US")
                replacement_id=$(speedtest --servers | grep -i "united states\|usa" | grep -v "$current_id" | head -1 | awk '{print $1}')
                ;;
              "FR")  
                replacement_id=$(speedtest --servers | grep -i "france" | grep -v "$current_id" | head -1 | awk '{print $1}')
                ;;
              "NL")
                replacement_id=$(speedtest --servers | grep -i "netherlands" | grep -v "$current_id" | head -1 | awk '{print $1}')
                ;;
              "CN")
                replacement_id=$(speedtest --servers | grep -i "hong kong\|china" | grep -v "$current_id" | head -1 | awk '{print $1}')
                ;;
              "SG")
                replacement_id=$(speedtest --servers | grep -i "singapore" | grep -v "$current_id" | head -1 | awk '{print $1}')
                ;;
              "JP")
                replacement_id=$(speedtest --servers | grep -i "japan" | grep -v "$current_id" | head -1 | awk '{print $1}')
                ;;
              "VN")
                replacement_id=$(speedtest --servers | grep -i "vietnam\|viet nam" | grep -v "$current_id" | head -1 | awk '{print $1}')
                ;;
            esac
          fi
          
          echo "$replacement_id"
        }
        
        # Bi·∫øn ƒë·ªÉ track c√≥ thay ƒë·ªïi kh√¥ng
        CHANGED=false
        REPORT=""
        
        echo "üìä B·∫Øt ƒë·∫ßu ki·ªÉm tra server speedtest..." 
        echo "======================================="
        
        for server_id in "${!SERVERS[@]}"; do
          location_info="${SERVERS[$server_id]}"
          location=$(echo "$location_info" | cut -d':' -f1)
          country=$(echo "$location_info" | cut -d':' -f2)
          
          echo "üß™ Ki·ªÉm tra Server ID: $server_id ($location, $country)"
          
          # Test server
          if timeout 30 speedtest-cli --server="$server_id" > /dev/null 2>&1; then
            echo "‚úÖ Server $server_id ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng"
            REPORT+="\n‚úÖ Server $server_id ($location, $country): OK"
          else
            echo "‚ùå Server $server_id kh√¥ng ph·∫£n h·ªìi!"
            REPORT+="\n‚ùå Server $server_id ($location, $country): FAILED"
            
            # T√¨m server thay th·∫ø
            new_server_id=$(find_replacement_server "$location" "$country" "$server_id")
            
            if [[ -n "$new_server_id" && "$new_server_id" != "$server_id" ]]; then
              # Test server m·ªõi
              if timeout 30 speedtest-cli --server="$new_server_id" > /dev/null 2>&1; then
                echo "üîÑ T√¨m th·∫•y server thay th·∫ø: $new_server_id"
                REPORT+="\nüîÑ Thay th·∫ø b·∫±ng Server $new_server_id"
                
                # Thay th·∫ø trong file bench.sh v√† c·∫≠p nh·∫≠t c·∫£ t√™n hi·ªÉn th·ªã
                sed -i "s/speed_test '$server_id' '[^']*'/speed_test '$new_server_id' '$location'/g" bench.sh
                sed -i "s/speed_test \"$server_id\" \"[^\"]*\"/speed_test \"$new_server_id\" \"$location\"/g" bench.sh
                
                CHANGED=true
                echo "‚úÖ ƒê√£ c·∫≠p nh·∫≠t Server $server_id -> $new_server_id trong bench.sh"
              else
                echo "‚ö†Ô∏è  Server thay th·∫ø $new_server_id c≈©ng kh√¥ng ho·∫°t ƒë·ªông"
                REPORT+="\n‚ö†Ô∏è  Server thay th·∫ø $new_server_id c≈©ng failed"
              fi
            else
              echo "‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y server thay th·∫ø ph√π h·ª£p"
              REPORT+="\n‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y server thay th·∫ø"
            fi
          fi
          
          echo "---"
          sleep 2
        done
        
        echo "======================================="
        echo "üìã B√ÅO C√ÅO T·ªîNG K·∫æT:"
        echo -e "$REPORT"
        
        # L∆∞u report v√†o file
        echo -e "# Speedtest Server Check Report - $(date)\n$REPORT" > speedtest-report.md
        
        # Set output cho step ti·∫øp theo
        echo "CHANGED=$CHANGED" >> $GITHUB_ENV
        echo "REPORT<<EOF" >> $GITHUB_ENV
        echo -e "$REPORT" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        
    - name: Commit changes if any
      if: env.CHANGED == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # So s√°nh thay ƒë·ªïi
        echo "üìù Thay ƒë·ªïi trong bench.sh:"
        git diff bench.sh || true
        
        git add bench.sh speedtest-report.md
        git commit -m "üîÑ Auto-update speedtest server IDs - $(date +'%Y-%m-%d %H:%M:%S')"
        
    - name: Push changes
      if: env.CHANGED == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        
    - name: Create Issue on failures
      if: contains(env.REPORT, 'FAILED') || contains(env.REPORT, '‚ö†Ô∏è')
      uses: actions/github-script@v7
      with:
        script: |
          const report = process.env.REPORT;
          const title = `üö® Speedtest Server Issues Detected - ${new Date().toISOString().split('T')[0]}`;
          const body = `## üìä Speedtest Server Check Report
          
          **Th·ªùi gian check:** ${new Date().toLocaleString('vi-VN')}
          
          ### üìã Chi ti·∫øt:
          ${report}
          
          ### üîß H√†nh ƒë·ªông c·∫ßn thi·∫øt:
          - Ki·ªÉm tra c√°c server b·ªã l·ªói
          - Xem x√©t c·∫≠p nh·∫≠t th·ªß c√¥ng n·∫øu c·∫ßn
          - Theo d√µi hi·ªáu su·∫•t server m·ªõi
          
          ---
          *Issue n√†y ƒë∆∞·ª£c t·∫°o t·ª± ƒë·ªông b·ªüi GitHub Action*`;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['bug', 'automated', 'speedtest']
          });
          
    - name: Upload report artifact
      uses: actions/upload-artifact@v4
      with:
        name: speedtest-report-${{ github.run_number }}
        path: speedtest-report.md
        retention-days: 30
