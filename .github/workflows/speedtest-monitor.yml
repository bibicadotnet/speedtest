name: Speedtest Server Monitor

on:
  schedule:
    # Chạy hàng tuần thay vì hàng ngày để tránh spam
    - cron: '0 2 * * 0'  # Chủ nhật lúc 2:00 UTC
  workflow_dispatch: # Cho phép chạy thủ công

jobs:
  check-speedtest-servers:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        # Cài đặt speedtest-cli từ pip thay vì apt (version mới hơn)
        sudo apt-get update
        sudo apt-get install -y python3-pip curl jq
        pip3 install speedtest-cli
        
        # Thêm pip bin vào PATH
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: Setup network optimization
      run: |
        # Thay đổi User-Agent và network settings
        export SPEEDTEST_CLI_USER_AGENT="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36"
        echo "SPEEDTEST_CLI_USER_AGENT=$SPEEDTEST_CLI_USER_AGENT" >> $GITHUB_ENV
        
        # Random delay để tránh detection
        sleep $((RANDOM % 30 + 10))
        
    - name: Check servers availability
      run: |
        # Đọc danh sách server từ bench.sh
        echo "Doc danh sach server tu bench.sh..."
        
        mapfile -t server_lines < <(grep "speed_test '[0-9]" bench.sh)
        
        if [ ${#server_lines[@]} -eq 0 ]; then
          echo "ERROR: Khong tim thay server nao trong bench.sh"
          exit 1
        fi
        
        # Function test server bằng speedtest-cli thực tế
        check_server_exists() {
          local server_id="$1"
          
          echo "Testing server $server_id voi speedtest-cli..."
          
          # Method 1: Sử dụng speedtest-cli để test thực tế server
          local exit_code=1
          
          # Timeout sau 30 giây để tránh hang
          if timeout 30s speedtest-cli --server "$server_id" --no-download --no-upload --simple >/dev/null 2>&1; then
            exit_code=0
          fi
          
          if [ $exit_code -eq 0 ]; then
            echo "SUCCESS: Server $server_id responded to speedtest-cli"
            return 0
          fi
          
          # Method 2: Kiểm tra server có trong danh sách servers của speedtest
          echo "Checking if server $server_id exists in server list..."
          local server_list
          server_list=$(timeout 20s speedtest-cli --list 2>/dev/null | grep -E "^\s*$server_id\)" || echo "")
          
          if [[ -n "$server_list" ]]; then
            echo "SUCCESS: Server $server_id found in server list: $server_list"
            return 0
          fi
          
          # Method 3: Kiểm tra qua Speedtest API (backup method)
          echo "Checking server $server_id via Speedtest API..."
          local api_response
          api_response=$(curl -s --connect-timeout 10 --max-time 15 \
            -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36" \
            "https://www.speedtest.net/api/js/servers?engine=js&limit=100" 2>/dev/null || echo "")
          
          if [[ "$api_response" == *"\"id\":$server_id"* || "$api_response" == *"\"id\":\"$server_id\""* ]]; then
            echo "SUCCESS: Server $server_id found in API response"
            return 0
          fi
          
          echo "FAILED: Server $server_id not found or not responding"
          return 1
        }
        
        # Function tìm server thay thế bằng cách query speedtest-cli
        find_replacement_server() {
          local location="$1"
          local current_id="$2"
          
          echo "Tim server thay the cho $location..."
          
          # Lấy danh sách server từ speedtest-cli
          local server_list
          server_list=$(timeout 30s speedtest-cli --list 2>/dev/null || echo "")
          
          if [[ -z "$server_list" ]]; then
            echo "WARNING: Khong the lay danh sach server tu speedtest-cli"
            return 1
          fi
          
          # Tìm server dựa trên location keywords
          local search_patterns=()
          
          case "$location" in
            *"San Jose"*|*"US"*|*"United States"*) 
              search_patterns=("San Jose" "California" "US" "United States") ;;
            *"France"*|*"FR"*)
              search_patterns=("France" "Paris" "FR") ;;
            *"Amsterdam"*|*"Netherlands"*|*"NL"*)
              search_patterns=("Amsterdam" "Netherlands" "NL") ;;
            *"Hong Kong"*|*"HK"*)
              search_patterns=("Hong Kong" "HK") ;;
            *"Singapore"*|*"SG"*)
              search_patterns=("Singapore" "SG") ;;
            *"Tokyo"*|*"Japan"*|*"JP"*)
              search_patterns=("Tokyo" "Japan" "JP") ;;
            *"FPT"*|*"VNPT"*|*"Viettel"*|*"Vietnam"*|*"VN"*)
              search_patterns=("Vietnam" "VN" "FPT" "VNPT" "Viettel" "Ho Chi Minh" "Hanoi") ;;
            *)
              search_patterns=("Vietnam" "VN") ;;
          esac
          
          # Tìm server match với pattern
          local candidate_servers=()
          
          for pattern in "${search_patterns[@]}"; do
            while IFS= read -r line; do
              if [[ "$line" =~ ^[[:space:]]*([0-9]+)\)[[:space:]]*(.+)$ ]]; then
                local found_id="${BASH_REMATCH[1]}"
                local found_desc="${BASH_REMATCH[2]}"
                
                if [[ "$found_id" != "$current_id" ]] && [[ "$found_desc" == *"$pattern"* ]]; then
                  candidate_servers+=("$found_id")
                  echo "Found candidate: $found_id - $found_desc"
                fi
              fi
            done <<< "$server_list"
            
            # Nếu đã tìm thấy candidates, test chúng
            if [ ${#candidate_servers[@]} -gt 0 ]; then
              break
            fi
          done
          
          # Test các candidate servers
          for candidate_id in "${candidate_servers[@]}"; do
            echo "Testing candidate server $candidate_id..."
            if check_server_exists "$candidate_id"; then
              echo "SUCCESS: Found working replacement: $candidate_id"
              echo "$candidate_id"
              return 0
            fi
            sleep 2
          done
          
          echo "ERROR: Khong tim thay server thay the cho $location"
          return 1
        }
        
        CHANGED=false
        FAILED_SERVERS=()
        REPLACED_SERVERS=()
        
        echo "Kiem tra ${#server_lines[@]} speedtest servers..."
        echo "=================================="
        
        # Kiểm tra từng server với random delay
        for line in "${server_lines[@]}"; do
          server_id=$(echo "$line" | sed -n "s/.*speed_test '\([0-9]*\)'.*/\1/p")
          location=$(echo "$line" | sed -n "s/.*speed_test '[0-9]*' '\([^']*\)'.*/\1/p")
          
          if [[ -z "$server_id" || -z "$location" ]]; then
            echo "WARNING: Khong the parse: $line"
            continue
          fi
          
          echo "Kiem tra Server $server_id ($location)"
          
          # Random delay để tránh rate limiting
          sleep $((RANDOM % 5 + 3))
          
          if check_server_exists "$server_id"; then
            echo "OK: Server $server_id"
          else
            echo "FAILED: Server $server_id"
            FAILED_SERVERS+=("$server_id:$location")
            
            # Tìm server thay thế
            new_server_id=$(find_replacement_server "$location" "$server_id")
            
            if [[ -n "$new_server_id" && "$new_server_id" != "$server_id" ]]; then
              echo "SUCCESS: Tim thay server thay the $new_server_id cho $location"
              
              # Thay thế trong bench.sh - escape ký tự đặc biệt
              # Sử dụng sed với delimiter khác để tránh conflict
              sed -i "s|speed_test '$server_id'|speed_test '$new_server_id'|g" bench.sh
              
              # Verify thay đổi thành công
              if grep -q "speed_test '$new_server_id'" bench.sh; then
                CHANGED=true
                REPLACED_SERVERS+=("$server_id -> $new_server_id ($location)")
                echo "UPDATE: Da cap nhat bench.sh: $server_id -> $new_server_id"
              else
                echo "WARNING: Khong the cap nhat bench.sh cho server $server_id"
              fi
            else
              echo "WARNING: Khong tim thay server thay the cho $location"
            fi
          fi
          
          echo "---"
        done
        
        echo "=================================="
        echo "Tong ket:"
        echo "- So server failed: ${#FAILED_SERVERS[@]}"
        echo "- So server replaced: ${#REPLACED_SERVERS[@]}"
        
        if [ ${#FAILED_SERVERS[@]} -gt 0 ]; then
          echo "Server failed:"
          for failed in "${FAILED_SERVERS[@]}"; do
            echo "  * $failed"
          done
        fi
        
        if [ ${#REPLACED_SERVERS[@]} -gt 0 ]; then
          echo "Server replaced:"
          for replaced in "${REPLACED_SERVERS[@]}"; do
            echo "  * $replaced"
          done
        fi
        
        # Safety check: không thay đổi nếu quá nhiều server failed
        if [ ${#FAILED_SERVERS[@]} -gt 6 ]; then
          echo "WARNING: Qua nhieu server failed (${#FAILED_SERVERS[@]}), co the la network issue."
          echo "Chi thuc hien thay doi neu co it nhat 1 server thay the thanh cong."
          if [ ${#REPLACED_SERVERS[@]} -eq 0 ]; then
            CHANGED=false
            echo "ERROR: Khong co server nao duoc thay the thanh cong, huy commit."
          fi
        fi
        
        echo "CHANGED=$CHANGED" >> $GITHUB_ENV
        
        # Tạo summary cho GitHub Actions
        {
          echo "## Speedtest Server Check Results"
          echo ""
          echo "- **Failed servers:** ${#FAILED_SERVERS[@]}"
          echo "- **Replaced servers:** ${#REPLACED_SERVERS[@]}"
          echo "- **Changes made:** $CHANGED"
          echo ""
          if [ ${#REPLACED_SERVERS[@]} -gt 0 ]; then
            echo "### Successful Replacements:"
            for replaced in "${REPLACED_SERVERS[@]}"; do
              echo "- $replaced"
            done
          fi
        } >> $GITHUB_STEP_SUMMARY
        
    - name: Commit và push thay đổi
      if: env.CHANGED == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        echo "Thay doi trong bench.sh:"
        git diff bench.sh
        
        if git diff --quiet bench.sh; then
          echo "WARNING: Khong co thay doi thuc te trong bench.sh"
          exit 0
        fi
        
        git add bench.sh
        git commit -m "Auto-update speedtest servers - $(date +'%Y-%m-%d %H:%M')"
        git push
        
        echo "SUCCESS: Da commit va push thay doi thanh cong!"
